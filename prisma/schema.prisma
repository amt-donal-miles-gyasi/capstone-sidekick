generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DEV_DATABASE_URL")
}

model User {
  id         String    @id @default(cuid())
  email      String    @unique
  password   String
  role       Role      @default(STUDENT)
  createdAt  DateTime  @default(now())
  loginId    String    @unique
  isVerified Boolean   @default(false)
  lecturer   Lecturer?
  student    Student?

  @@unique([id, email])
  @@index([email])
}

model Student {
  id          String                @id @default(cuid())
  email       String
  firstName   String
  lastName    String
  studentId   String                @unique
  createdAt   DateTime              @default(now())
  userId      String?
  user        User?                 @relation(fields: [userId, email], references: [id, email], onDelete: Cascade)
  assignments StudentsOnAsignment[]
  Submission  Submission[]

  @@unique([userId, email])
}

model Lecturer {
  id         String       @id @default(cuid())
  email      String
  firstName  String
  lastName   String
  lecturerId String       @unique
  createdAt  DateTime     @default(now())
  userId     String?
  Assignment Assignment[]
  user       User?        @relation(fields: [userId, email], references: [id, email], onDelete: Cascade)
  Submission Submission[]

  @@unique([userId, email])
}

model StudentsOnAsignment {
  id           String     @id @default(cuid())
  studentId    String
  assignmentId String
  assignedAt   DateTime   @default(now())
  assignedBy   String
  assignments  Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
  students     Student    @relation(fields: [studentId], references: [id], onDelete: Cascade)
}

model Assignment {
  id          String                @id @default(cuid())
  title       String
  description String
  deadline    DateTime
  status      Status                @default(DRAFT)
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @default(now())
  lecturerId  String?
  uniqueCode  String                @unique
  Lecturer    Lecturer?             @relation(fields: [lecturerId], references: [id])
  students    StudentsOnAsignment[]
  Submission  Submission[]
}

model Submission {
  id           String     @id @default(cuid())
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId String
  student      Student    @relation(fields: [studentId], references: [id])
  folderName   String     @unique
  studentId    String
  createdAt    DateTime   @default(now())
  lecturer     Lecturer   @relation(fields: [lecturerId], references: [id])
  lecturerId   String
  snapshots    Snapshot[]
}

model Snapshot {
  id           String     @id @default(cuid())
  submission   Submission @relation(fields: [submissionId], references: [id])
  submissionId String
  s3Key        String[]
  createdAt    DateTime   @default(now())
  snapshotName String     @unique
}

enum Role {
  ADMIN
  LECTURER
  STUDENT
}

enum Status {
  DRAFT
  PUBLISHED
}
